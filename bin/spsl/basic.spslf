#FS_IN vec3 obj_color;
#FS_IN vec3 vertex_pos;
#FS_IN vec3 normal_out;

#UNIFORM float uTime;
#UNIFORM vec3 uViewPos;

void main() {
    // phong shader
    vec3 light_pos = vec3(2.0, 5.0, -4.0);
    vec3 light_color = vec3(1.0, 1.0, 1.0);
    vec3 ambient_color = vec3(0.3, 0.3, 0.3);

    vec3 light_dir = normalize(light_pos - vertex_pos);
    vec3 view_dir = normalize(uViewPos - vertex_pos);
    vec3 reflect_dir = reflect(-light_dir, normal_out);

    float diff = max(dot(normal_out, light_dir), 0.0);
    float spec = pow(max(dot(view_dir, reflect_dir), 0.0), 32.0);

    vec3 diffuse = diff * light_color;
    vec3 specular = spec * light_color;

    vec3 result = (ambient_color + diffuse + specular) * obj_color;

    spsl_fragcolor = vec4(result, 1.0);





}